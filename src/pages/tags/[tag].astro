---
import BaseLayout from "@/layouts/BaseLayout.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import { getCollection } from "astro:content";
import { formatDateShort } from "@/utils/dateFormat";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    // Filter posts by tag
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    // Sort filtered posts by date in descending order
    const sortedPosts = filteredPosts.sort(
      (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
    );

    return {
      params: { tag },
      props: { posts: sortedPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout seo={{
  title: `${tag} - Blog Posts | Breadcrumb`,
  description: `Explore our latest blog posts about ${tag}. Discover insights, tips, and strategies related to ${tag} in data analytics and reporting.`,
  canonical: `https://www.breadcrumb.ai/tags/${tag}`,
  openGraph: {
    url: `https://www.breadcrumb.ai/tags/${tag}`,
    title: `${tag} - Blog Posts | Breadcrumb`,
    description: `Explore our latest blog posts about ${tag}. Discover insights, tips, and strategies related to ${tag} in data analytics and reporting.`,
    images: [
      {
        url: "/blog/images/breadcrumb-ai-social.png",
        width: 1200,
        height: 630,
        alt: `Breadcrumb ${tag} Blog Posts`,
        type: "image/jpeg",
      },
    ],
    site_name: "Breadcrumb",
    type: "website",
  },
  twitter: {
    handle: "@BreadcrumbAI",
    site: "@BreadcrumbAI",
    cardType: "summary_large_image",
  }
}} pageTitle={tag}>
  <section>
    <div class="px-8 py-12 md:px-12 mx-auto lg:pt-24 max-w-7xl lg:px-32">
      <div class="lg:text-center">
        <h1 class="text-4xl tracking-tight text-balance mt-12 lg:mt-16 font-medium font-display text-black md:text-8xl">
          Posts tagged with "{tag}"
        </h1>
      </div>

      <ul class="grid grid-cols-1 mt-12 gap-8 gap-y-24 lg:grid-cols-3 sm:grid-cols-2">
        {
          posts.map((post) => (
            <EntriesOne
              url={`${(import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/')}${post.slug}`}
              title={post.data.title}
              description={post.data.description}
              alt={post.data.title}
              pubDate={formatDateShort(post.data.pubDate)}
              author={post.data.author}
              image={post.data.image.url}
              tags={post.data.tags}
            />
          ))
        }
      </ul>
    </div>
  </section>
</BaseLayout>
